"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FactoryBuilder = void 0;
;
class FactoryBuilder {
    constructor(factories) {
        this.factories = factories;
    }
    static builder() {
        return new FactoryBuilder([]);
    }
    add(factory) {
        const nInner = this.factories;
        nInner.push(factory);
        return new FactoryBuilder(nInner);
    }
    build(config, type, state) {
        for (let f of this.factories) {
            if (f.type.toLowerCase() === type.toLowerCase()) {
                return f.build(config, state);
            }
        }
        throw "No such factory found! " + type;
    }
    getConfig(quads, subject) {
        for (let f of this.factories) {
            try {
                const config = f.ldConfig(quads, subject);
                if (config) {
                    return { config, type: f.type };
                }
            }
            catch (e) {
                console.log(e);
            }
        }
        throw "No such factory found!";
    }
    buildLD(quads, subject, state) {
        for (let f of this.factories) {
            try {
                const config = f.ldConfig(quads, subject);
                if (config) {
                    return f.build(config, state);
                }
            }
            catch (e) {
            }
        }
        throw "No such factory found! Tried " + this.factories.map(f => f.type).join(', ');
    }
}
exports.FactoryBuilder = FactoryBuilder;
