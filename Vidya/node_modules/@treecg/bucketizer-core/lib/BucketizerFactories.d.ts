import { Bucketizer } from "@treecg/types";
import { Quad, Term } from "rdf-js";
export interface Typed<C> {
    type: string;
    config: C;
}
export interface Factory<C> {
    type: string;
    build(config: C, state?: any): Bucketizer;
    ldConfig(quads: Quad[], subject: Term): C | void;
}
export declare class FactoryBuilder<C> {
    private readonly factories;
    private constructor();
    static builder(): FactoryBuilder<{}>;
    add<N>(factory: Factory<N>): FactoryBuilder<C | N>;
    build(config: C, type: string, state?: any): Bucketizer;
    getConfig(quads: Quad[], subject: Term): {
        config: C;
        type: string;
    };
    buildLD(quads: Quad[], subject: Term, state?: any): Bucketizer;
}
