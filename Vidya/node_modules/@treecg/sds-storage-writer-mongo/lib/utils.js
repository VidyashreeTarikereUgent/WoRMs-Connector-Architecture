"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractBucketStrategies = exports.getMembersByType = exports.getMember = void 0;
const types_1 = require("@treecg/types");
const n3_1 = require("n3");
function getMember(subject, store, done) {
    const newQuads = store.getQuads(subject, null, null, null);
    done.add(subject);
    const newSubjects = newQuads.map(q => q.object)
        .filter(q => q.termType === "BlankNode" || q.termType == "NamedNode")
        .filter(q => !done.has(q));
    return [...newQuads, ...newSubjects.flatMap(s => getMember(s, store, done))];
}
exports.getMember = getMember;
function getMembersByType(type, store) {
    return store.getSubjects(types_1.RDF.terms.type, type, null).map(sub => {
        if (sub.termType !== "NamedNode")
            throw "Memmbers can only be named nodes!";
        const quads = getMember(sub, store, new Set());
        return { id: sub, quads };
    });
}
exports.getMembersByType = getMembersByType;
function extractBucketStrategies(meta) {
    const store = new n3_1.Store(meta);
    return getMembersByType(types_1.LDES.terms.BucketizeStrategy, store);
}
exports.extractBucketStrategies = extractBucketStrategies;
